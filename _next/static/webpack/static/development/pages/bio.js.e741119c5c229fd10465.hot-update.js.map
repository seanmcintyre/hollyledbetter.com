{"version":3,"file":"static/webpack/static/development/pages/bio.js.e741119c5c229fd10465.hot-update.js","sources":["webpack:///./src/components/Nav.tsx"],"sourcesContent":["import React, {\n  ReactNode,\n  Children,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n} from 'react';\nimport styled, { css, keyframes } from 'styled-components';\nimport { rgba } from 'polished';\nimport Router from 'next/router';\nimport { AppContext, AppDispatchContext } from '../../pages/_app';\n\nconst black = '#000';\n\ninterface NavProps {\n  children?: ReactNode;\n}\n\nexport function Nav({ children, ...props }: NavProps) {\n  return <NavStyled {...props}>{children}</NavStyled>;\n}\n\ninterface Props {\n  href: string;\n  children?: ReactNode;\n}\n\nexport function Link({ href, children }: Props) {\n  const { loaded } = useContext(AppContext);\n  const dispatch = useContext(AppDispatchContext);\n\n  useLayoutEffect(() => {\n    // if (!loaded) dispatch({ type: 'LOADED' });\n    setTimeout(() => {\n      if (!loaded) dispatch({ type: 'LOADED' });\n    });\n  }, []);\n\n  console.log({ loaded });\n\n  return (\n    <LinkStyled\n      href={href}\n      loaded={loaded}\n      onClick={(event: any) => {\n        event.preventDefault();\n        Router.push(href);\n      }}\n    >\n      {children}\n    </LinkStyled>\n  );\n}\n\nconst slideIn = keyframes`\n    0% {\n      opacity: 0;\n      transform: translateX(-10%);\n    }\n\n    100% {\n      opacity: 1;\n      transform: translateX(0);\n    }\n`;\n\nconst LinkStyled = styled.a<any>`\n  display: block;\n  margin-bottom: 2.618em;\n  text-align: center;\n  flex-grow: 1;\n  flex-basis: 0;\n  transition: 1s;\n  cursor: pointer;\n  border: 1px solid ${rgba(black, 0.05)};\n  margin: 10px;\n  border-radius: 5px;\n  padding: 10px 5px;\n  min-width: calc(50% - 20px);\n  background: rgb(250, 244, 242);\n  box-shadow: 0 10px 20px -9px ${rgba(black, 0.25)},\n    0 -6px 18px -12px ${rgba(black, 0.15)};\n  transition: 120ms ease-in-out;\n  cursor: pointer;\n\n  ${p =>\n    !p.loaded &&\n    css`\n      animation: ${slideIn} 500ms ease-in-out backwards;\n    `}\n\n  ${[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(\n    i => css`\n      &:nth-child(${i}) {\n        animation-delay: ${500 + (i + 1) * 40 - 100 / (i + 1)}ms;\n      }\n    `,\n  )}\n\n  @media screen and (min-width: 800px) {\n    min-width: 0px;\n    margin: 15px;\n    padding: 20px 5px;\n    min-width: 100%;\n  }\n\n  @media screen and (min-width: 1100px) {\n    min-width: 0px;\n    margin: 20px;\n  }\n\n  > svg {\n    display: block;\n    margin: 0 auto;\n    transition: 500ms;\n    height: 10vmin;\n  }\n\n  &:hover {\n    color: ${rgba(204, 156, 14, 1)};\n    transform: scale(1.0334) rotate(0.33deg);\n\n    svg {\n      fill: ${rgba(204, 156, 14, 1)} !important;\n\n      * {\n        fill: ${rgba(204, 156, 14, 1)} !important;\n      }\n    }\n  }\n`;\n\nconst NavStyled = styled.nav`\n  font: 800 0.5em/1 system-ui;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  color: ${rgba(black, 0.8)};\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  max-width: calc(50vmin + 320px);\n  margin: 0 auto;\n\n  @media screen and (min-width: 800px) {\n    min-width: 760px;\n  }\n\n  @media screen and (min-width: 1100px) {\n    color: ${rgba(black, 0.667)};\n    font: 800 0.618em/1 system-ui;\n    min-width: 720px;\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAOA;AACA;AACA;AACA;AAEA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAEA;AAYA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAOA;AAAA;AAwCA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}