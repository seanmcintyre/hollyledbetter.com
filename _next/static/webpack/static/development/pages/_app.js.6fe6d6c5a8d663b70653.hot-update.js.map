{"version":3,"file":"static/webpack/static/development/pages/_app.js.6fe6d6c5a8d663b70653.hot-update.js","sources":["webpack:///./pages/_app.tsx"],"sourcesContent":["import React, { createContext, Dispatch, useReducer } from 'react';\nimport App from 'next/app';\n\nconst AppContext = createContext<any>({});\n\nexport const AppDispatchContext = createContext<\n  () => Dispatch<any> | void\n>(() => {});\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return state.name === 'light' ? themes.dark : themes.light;\n    default:\n      return state;\n  }\n}\n\nclass NextApp extends App {\n  render() {\n    return <CustomAppFunction {...this.props} />;\n  }\n}\n\nfunction CustomAppFunction({ Component, pageProps }: any) {\n  const [state, dispatch] = useReducer(reducer, {});\n\n  return (\n    <AppContext.Provider value={{}}>\n      <AppDispatchContext.Provider value={dispatch}>\n        <Component {...pageProps} />;\n      </AppDispatchContext.Provider>\n    </AppContext.Provider>\n  );\n}\n\nexport default NextApp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAJA;AAMA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}